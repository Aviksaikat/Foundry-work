{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "counter",
      "outputs": [
        {
          "internalType": "contract Counter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDec",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDecUnderFlow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFailDec",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testInc",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b506111ef8061003d6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063916a17c611610097578063cbff37a911610066578063cbff37a9146101ca578063e20c9f71146101d2578063e3723e03146101da578063fa7626d4146101e257600080fd5b8063916a17c61461019a57806392cc5770146101a2578063b5508aa9146101aa578063ba414fa6146101b257600080fd5b806361bc221a116100d357806361bc221a1461013d57806366d9a9a01461016857806385226c811461017d5780638c49b4cf1461019257600080fd5b80630a9254e4146101055780631ed7831c1461010f5780633e5e3c231461012d5780633f7286f414610135575b600080fd5b61010d6101ef565b005b61011761023a565b6040516101249190610e09565b60405180910390f35b61011761029c565b6101176102fc565b601b54610150906001600160a01b031681565b6040516001600160a01b039091168152602001610124565b61017061035c565b6040516101249190610e56565b61018561044b565b6040516101249190610f59565b61010d61051b565b6101706106d6565b61010d6107bc565b6101856108ca565b6101ba61099a565b6040519015158152602001610124565b61010d610ac5565b610117610b15565b61010d610b75565b6000546101ba9060ff1681565b6040516101fb90610dfc565b604051809103906000f080158015610217573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d80548060200260200160405190810160405280929190818152602001828054801561029257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610274575b5050505050905090565b6060600f805480602002602001604051908101604052809291908181526020018280548015610292576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610274575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015610292576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610274575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156104425760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561042a57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116103ec5790505b50505050508152505081526020019060010190610380565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b8282101561044257838290600052602060002001805461048e90610fbb565b80601f01602080910402602001604051908101604052809291908181526020018280546104ba90610fbb565b80156105075780601f106104dc57610100808354040283529160200191610507565b820191906000526020600020905b8154815290600101906020018083116104ea57829003601f168201915b50505050508152602001906001019061046f565b601b60009054906101000a90046001600160a01b03166001600160a01b031663371303c06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561056b57600080fd5b505af115801561057f573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b031663371303c06040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105d357600080fd5b505af11580156105e7573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b031663b3bcfa826040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561063b57600080fd5b505af115801561064f573d6000803e3d6000fd5b505050506106d4601b60009054906101000a90046001600160a01b03166001600160a01b03166306661abd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cd9190610ff5565b6001610bc5565b565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156104425760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156107a457602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116107665790505b505050505081525050815260200190600101906106fa565b60405160116024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb39060440160408051601f198184030181529181526020820180516001600160e01b0316634e487b7160e01b1790525160e083901b6001600160e01b031916815261082e919060040161100e565b600060405180830381600087803b15801561084857600080fd5b505af115801561085c573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b031663b3bcfa826040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108b057600080fd5b505af11580156108c4573d6000803e3d6000fd5b50505050565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101561044257838290600052602060002001805461090d90610fbb565b80601f016020809104026020016040519081016040528092919081815260200182805461093990610fbb565b80156109865780601f1061095b57610100808354040283529160200191610986565b820191906000526020600020905b81548152906001019060200180831161096957829003601f168201915b5050505050815260200190600101906108ee565b60008054610100900460ff16156109ba5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610ac05760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610a48917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611028565b60408051601f1981840301815290829052610a6291611059565b6000604051808303816000865af19150503d8060008114610a9f576040519150601f19603f3d011682016040523d82523d6000602084013e610aa4565b606091505b5091505080806020019051810190610abc9190611075565b9150505b919050565b601b60009054906101000a90046001600160a01b03166001600160a01b031663b3bcfa826040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108b057600080fd5b6060600c805480602002602001604051908101604052809291908181526020018280548015610292576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610274575050505050905090565b601b60009054906101000a90046001600160a01b03166001600160a01b031663371303c06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561063b57600080fd5b808214610cec577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610c369060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1610cec610cf0565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610deb5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610d8a9291602001611028565b60408051601f1981840301815290829052610da491611059565b6000604051808303816000865af19150503d8060008114610de1576040519150601f19603f3d011682016040523d82523d6000602084013e610de6565b606091505b505050505b6000805461ff001916610100179055565b6101228061109883390190565b6020808252825182820181905260009190848201906040850190845b81811015610e4a5783516001600160a01b031683529284019291840191600101610e25565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610efa57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610ee55783516001600160e01b0319168252928b019260019290920191908b0190610ebb565b50978a01979550505091870191600101610e7e565b50919998505050505050505050565b60005b83811015610f24578181015183820152602001610f0c565b50506000910152565b60008151808452610f45816020860160208601610f09565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610fae57603f19888603018452610f9c858351610f2d565b94509285019290850190600101610f80565b5092979650505050505050565b600181811c90821680610fcf57607f821691505b602082108103610fef57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561100757600080fd5b5051919050565b6020815260006110216020830184610f2d565b9392505050565b6001600160e01b031983168152815160009061104b816004850160208701610f09565b919091016004019392505050565b6000825161106b818460208701610f09565b9190910192915050565b60006020828403121561108757600080fd5b8151801515811461102157600080fdfe608060405234801561001057600080fd5b50610102806100206000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c806306661abd146041578063371303c014605b578063b3bcfa82146063575b600080fd5b604960005481565b60405190815260200160405180910390f35b60616069565b005b60616080565b60016000808282546079919060a6565b9091555050565b60016000808282546079919060bc565b634e487b7160e01b600052601160045260246000fd5b8082018082111560b65760b66090565b92915050565b8181038181111560b65760b6609056fea26469706673582212200968a276da23fbaad4c61b4ddf74ad68054da251e8bb41e663432980d86d97d964736f6c63430008130033a264697066735822122001566f28fc410dc1db809280fc22d890f3cb1f53f604e40469b8f308cb5bd5e364736f6c63430008130033",
    "sourceMap": "157:474:20:-:0;;;1572:26:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3315:44:3;;;;;;;;;;;157:474:20;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c8063916a17c611610097578063cbff37a911610066578063cbff37a9146101ca578063e20c9f71146101d2578063e3723e03146101da578063fa7626d4146101e257600080fd5b8063916a17c61461019a57806392cc5770146101a2578063b5508aa9146101aa578063ba414fa6146101b257600080fd5b806361bc221a116100d357806361bc221a1461013d57806366d9a9a01461016857806385226c811461017d5780638c49b4cf1461019257600080fd5b80630a9254e4146101055780631ed7831c1461010f5780633e5e3c231461012d5780633f7286f414610135575b600080fd5b61010d6101ef565b005b61011761023a565b6040516101249190610e09565b60405180910390f35b61011761029c565b6101176102fc565b601b54610150906001600160a01b031681565b6040516001600160a01b039091168152602001610124565b61017061035c565b6040516101249190610e56565b61018561044b565b6040516101249190610f59565b61010d61051b565b6101706106d6565b61010d6107bc565b6101856108ca565b6101ba61099a565b6040519015158152602001610124565b61010d610ac5565b610117610b15565b61010d610b75565b6000546101ba9060ff1681565b6040516101fb90610dfc565b604051809103906000f080158015610217573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d80548060200260200160405190810160405280929190818152602001828054801561029257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610274575b5050505050905090565b6060600f805480602002602001604051908101604052809291908181526020018280548015610292576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610274575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015610292576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610274575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156104425760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561042a57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116103ec5790505b50505050508152505081526020019060010190610380565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b8282101561044257838290600052602060002001805461048e90610fbb565b80601f01602080910402602001604051908101604052809291908181526020018280546104ba90610fbb565b80156105075780601f106104dc57610100808354040283529160200191610507565b820191906000526020600020905b8154815290600101906020018083116104ea57829003601f168201915b50505050508152602001906001019061046f565b601b60009054906101000a90046001600160a01b03166001600160a01b031663371303c06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561056b57600080fd5b505af115801561057f573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b031663371303c06040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105d357600080fd5b505af11580156105e7573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b031663b3bcfa826040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561063b57600080fd5b505af115801561064f573d6000803e3d6000fd5b505050506106d4601b60009054906101000a90046001600160a01b03166001600160a01b03166306661abd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cd9190610ff5565b6001610bc5565b565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156104425760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156107a457602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116107665790505b505050505081525050815260200190600101906106fa565b60405160116024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb39060440160408051601f198184030181529181526020820180516001600160e01b0316634e487b7160e01b1790525160e083901b6001600160e01b031916815261082e919060040161100e565b600060405180830381600087803b15801561084857600080fd5b505af115801561085c573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b031663b3bcfa826040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108b057600080fd5b505af11580156108c4573d6000803e3d6000fd5b50505050565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101561044257838290600052602060002001805461090d90610fbb565b80601f016020809104026020016040519081016040528092919081815260200182805461093990610fbb565b80156109865780601f1061095b57610100808354040283529160200191610986565b820191906000526020600020905b81548152906001019060200180831161096957829003601f168201915b5050505050815260200190600101906108ee565b60008054610100900460ff16156109ba5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610ac05760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610a48917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611028565b60408051601f1981840301815290829052610a6291611059565b6000604051808303816000865af19150503d8060008114610a9f576040519150601f19603f3d011682016040523d82523d6000602084013e610aa4565b606091505b5091505080806020019051810190610abc9190611075565b9150505b919050565b601b60009054906101000a90046001600160a01b03166001600160a01b031663b3bcfa826040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108b057600080fd5b6060600c805480602002602001604051908101604052809291908181526020018280548015610292576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610274575050505050905090565b601b60009054906101000a90046001600160a01b03166001600160a01b031663371303c06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561063b57600080fd5b808214610cec577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610c369060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1610cec610cf0565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610deb5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610d8a9291602001611028565b60408051601f1981840301815290829052610da491611059565b6000604051808303816000865af19150503d8060008114610de1576040519150601f19603f3d011682016040523d82523d6000602084013e610de6565b606091505b505050505b6000805461ff001916610100179055565b6101228061109883390190565b6020808252825182820181905260009190848201906040850190845b81811015610e4a5783516001600160a01b031683529284019291840191600101610e25565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610efa57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610ee55783516001600160e01b0319168252928b019260019290920191908b0190610ebb565b50978a01979550505091870191600101610e7e565b50919998505050505050505050565b60005b83811015610f24578181015183820152602001610f0c565b50506000910152565b60008151808452610f45816020860160208601610f09565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610fae57603f19888603018452610f9c858351610f2d565b94509285019290850190600101610f80565b5092979650505050505050565b600181811c90821680610fcf57607f821691505b602082108103610fef57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561100757600080fd5b5051919050565b6020815260006110216020830184610f2d565b9392505050565b6001600160e01b031983168152815160009061104b816004850160208701610f09565b919091016004019392505050565b6000825161106b818460208701610f09565b9190910192915050565b60006020828403121561108757600080fd5b8151801515811461102157600080fdfe608060405234801561001057600080fd5b50610102806100206000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c806306661abd146041578063371303c014605b578063b3bcfa82146063575b600080fd5b604960005481565b60405190815260200160405180910390f35b60616069565b005b60616080565b60016000808282546079919060a6565b9091555050565b60016000808282546079919060bc565b634e487b7160e01b600052601160045260246000fd5b8082018082111560b65760b66090565b92915050565b8181038181111560b65760b6609056fea26469706673582212200968a276da23fbaad4c61b4ddf74ad68054da251e8bb41e663432980d86d97d964736f6c63430008130033a264697066735822122001566f28fc410dc1db809280fc22d890f3cb1f53f604e40469b8f308cb5bd5e364736f6c63430008130033",
    "sourceMap": "157:474:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;215:55;;;:::i;:::-;;2161:134:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2930:133;;;:::i;2631:141::-;;;:::i;189:22:20:-;;;;;-1:-1:-1;;;;;189:22:20;;;;;;-1:-1:-1;;;;;858:32:21;;;840:51;;828:2;813:18;189:22:20;677:220:21;2447:178:6;;;:::i;:::-;;;;;;;:::i;2301:140::-;;;:::i;:::-;;;;;;;:::i;355:113:20:-;;;:::i;2778:146:6:-;;;:::i;526:101:20:-;;;:::i;1866:141:6:-;;;:::i;1819:584:0:-;;;:::i;:::-;;;3978:14:21;;3971:22;3953:41;;3941:2;3926:18;1819:584:0;3813:187:21;471:51:20;;;:::i;2013:142:6:-;;;:::i;273:79:20:-;;;:::i;1572:26:0:-;;;;;;;;;215:55:20;253:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;243:7:20;:23;;-1:-1:-1;;;;;;243:23:20;-1:-1:-1;;;;;243:23:20;;;;;;;;;;215:55::o;2161:134:6:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:6;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2930:133::-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:6;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:6;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;355:113:20;385:7;;;;;;;;;-1:-1:-1;;;;;385:7:20;-1:-1:-1;;;;;385:11:20;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;402:7;;;;;;;;;-1:-1:-1;;;;;402:7:20;-1:-1:-1;;;;;402:11:20;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;419:7;;;;;;;;;-1:-1:-1;;;;;419:7:20;-1:-1:-1;;;;;419:11:20;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;436:28;445:7;;;;;;;;;-1:-1:-1;;;;;445:7:20;-1:-1:-1;;;;;445:13:20;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;462:1;436:8;:28::i;:::-;355:113::o;2778:146:6:-;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;526:101:20;317:47:5;;359:4;317:47;;;4732:36:21;565:15:20;;;;4705:18:21;;317:47:5;;;-1:-1:-1;;317:47:5;;;;;;;;;;;;;;-1:-1:-1;;;;;317:47:5;-1:-1:-1;;;317:47:5;;;565:41:20;;;;;-1:-1:-1;;;;;;565:41:20;;;;;317:47:5;565:41:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;610:7;;;;;;;;;-1:-1:-1;;;;;610:7:20;-1:-1:-1;;;;;610:11:20;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;526:101::o;1866:141:6:-;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;5176:51:21;;;-1:-1:-1;;;5243:18:21;;;5236:34;2196:43:0;;;;;;;;;5149:18:21;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;471:51:20:-;505:7;;;;;;;;;-1:-1:-1;;;;;505:7:20;-1:-1:-1;;;;;505:11:20;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2013:142:6;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:6;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;273:79:20:-;303:7;;;;;;;;;-1:-1:-1;;;;;303:7:20;-1:-1:-1;;;;;303:11:20;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5209:262:0;5271:1;5266;:6;5262:203;;5293:41;;;;;6446:2:21;6428:21;;;6485:2;6465:18;;;6458:30;6524:34;6519:2;6504:18;;6497:62;-1:-1:-1;;;6590:2:21;6575:18;;6568:32;6632:3;6617:19;;6244:398;5293:41:0;;;;;;;;5353:31;;;6859:21:21;;;6916:2;6896:18;;;6889:30;-1:-1:-1;;;6950:2:21;6935:18;;6928:40;7035:4;7020:20;;7013:36;;;5353:31:0;;;;;;;7000:3:21;5353:31:0;;;5403;;;7272:21:21;;;7329:2;7309:18;;;7302:30;-1:-1:-1;;;7363:2:21;7348:18;;7341:40;7448:4;7433:20;;7426:36;;;5403:31:0;;;;;;;7413:3:21;5403:31:0;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;2409:432::-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;7675:51:21;;;-1:-1:-1;;;7742:18:21;;;7735:34;;;;2712:4:0;7785:18:21;;;7778:34;2489:11:0;;1671:64;2586:43;;7648:18:21;;2652:67:0;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;14:658:21:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:21;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:21;;14:658;-1:-1:-1;;;;;;14:658:21:o;902:1567::-;1104:4;1133:2;1173;1162:9;1158:18;1203:2;1192:9;1185:21;1226:6;1261;1255:13;1292:6;1284;1277:22;1318:2;1308:12;;1351:2;1340:9;1336:18;1329:25;;1413:2;1403:6;1400:1;1396:14;1385:9;1381:30;1377:39;1451:2;1443:6;1439:15;1472:1;1493;1503:937;1519:6;1514:3;1511:15;1503:937;;;1588:22;;;-1:-1:-1;;1584:36:21;1572:49;;1644:13;;1731:9;;-1:-1:-1;;;;;1727:35:21;1712:51;;1802:11;;1796:18;1834:15;;;1827:27;;;1915:19;;1684:15;;;1947:24;;;2037:21;;;;2082:1;;2005:2;1993:15;;;2096:236;2112:8;2107:3;2104:17;2096:236;;;2193:15;;-1:-1:-1;;;;;;2189:42:21;2175:57;;2301:17;;;;2140:1;2131:11;;;;;2258:14;;;;2096:236;;;-1:-1:-1;2418:12:21;;;;2355:5;-1:-1:-1;;;2383:15:21;;;;1545:1;1536:11;1503:937;;;-1:-1:-1;2457:6:21;;902:1567;-1:-1:-1;;;;;;;;;902:1567:21:o;2474:250::-;2559:1;2569:113;2583:6;2580:1;2577:13;2569:113;;;2659:11;;;2653:18;2640:11;;;2633:39;2605:2;2598:10;2569:113;;;-1:-1:-1;;2716:1:21;2698:16;;2691:27;2474:250::o;2729:271::-;2771:3;2809:5;2803:12;2836:6;2831:3;2824:19;2852:76;2921:6;2914:4;2909:3;2905:14;2898:4;2891:5;2887:16;2852:76;:::i;:::-;2982:2;2961:15;-1:-1:-1;;2957:29:21;2948:39;;;;2989:4;2944:50;;2729:271;-1:-1:-1;;2729:271:21:o;3005:803::-;3167:4;3196:2;3236;3225:9;3221:18;3266:2;3255:9;3248:21;3289:6;3324;3318:13;3355:6;3347;3340:22;3393:2;3382:9;3378:18;3371:25;;3455:2;3445:6;3442:1;3438:14;3427:9;3423:30;3419:39;3405:53;;3493:2;3485:6;3481:15;3514:1;3524:255;3538:6;3535:1;3532:13;3524:255;;;3631:2;3627:7;3615:9;3607:6;3603:22;3599:36;3594:3;3587:49;3659:40;3692:6;3683;3677:13;3659:40;:::i;:::-;3649:50;-1:-1:-1;3757:12:21;;;;3722:15;;;;3560:1;3553:9;3524:255;;;-1:-1:-1;3796:6:21;;3005:803;-1:-1:-1;;;;;;;3005:803:21:o;4005:380::-;4084:1;4080:12;;;;4127;;;4148:61;;4202:4;4194:6;4190:17;4180:27;;4148:61;4255:2;4247:6;4244:14;4224:18;4221:38;4218:161;;4301:10;4296:3;4292:20;4289:1;4282:31;4336:4;4333:1;4326:15;4364:4;4361:1;4354:15;4218:161;;4005:380;;;:::o;4390:184::-;4460:6;4513:2;4501:9;4492:7;4488:23;4484:32;4481:52;;;4529:1;4526;4519:12;4481:52;-1:-1:-1;4552:16:21;;4390:184;-1:-1:-1;4390:184:21:o;4779:218::-;4926:2;4915:9;4908:21;4889:4;4946:45;4987:2;4976:9;4972:18;4964:6;4946:45;:::i;:::-;4938:53;4779:218;-1:-1:-1;;;4779:218:21:o;5281:384::-;-1:-1:-1;;;;;;5466:33:21;;5454:46;;5523:13;;5436:3;;5545:74;5523:13;5608:1;5599:11;;5592:4;5580:17;;5545:74;:::i;:::-;5639:16;;;;5657:1;5635:24;;5281:384;-1:-1:-1;;;5281:384:21:o;5670:287::-;5799:3;5837:6;5831:13;5853:66;5912:6;5907:3;5900:4;5892:6;5888:17;5853:66;:::i;:::-;5935:16;;;;;5670:287;-1:-1:-1;;5670:287:21:o;5962:277::-;6029:6;6082:2;6070:9;6061:7;6057:23;6053:32;6050:52;;;6098:1;6095;6088:12;6050:52;6130:9;6124:16;6183:5;6176:13;6169:21;6162:5;6159:32;6149:60;;6205:1;6202;6195:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "counter()": "61bc221a",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testDec()": "8c49b4cf",
    "testDecUnderFlow()": "92cc5770",
    "testFailDec()": "cbff37a9",
    "testInc()": "e3723e03"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"counter\",\"outputs\":[{\"internalType\":\"contract Counter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testDec\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testDecUnderFlow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFailDec\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testInc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Counter.t.sol\":\"CounterTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@opensezppling/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x260965186c4b36030b61bfff44312607b7d9bc03fa8b5e9c2581ffeb17d0053b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c50e42ec13a54820d77ceb54e16f6efc1e9af2312ed39049ffbd1a5489cd0ee\",\"dweb:/ipfs/Qma1xCsmPhDfAZfDZGoFC7wuCTNXDhsBdFEZKnrZgTUj93\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0e6f32877ab26a83c9334eb5a000bf326bd2a0b04fea8647e045cea9c445f534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8965978bfa66ddab8db95449a96ee47d44c62ebcb4271ab293e847f359a2ba7d\",\"dweb:/ipfs/QmazxpekoHnno4ySoNUct7NcKx6UJR7UvcMtJ9JYsBDEUh\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x1c58e6899314a94d6e99225481aaaa3e283050e7fddb5f72bebc244bc1fb4d21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11e6f36d32826f6f133248d1158a343b5201de5869553d46df56e7fd0163e3f3\",\"dweb:/ipfs/Qma3dZZiBCc8tTw6BjmjgYxyTSCBhW2nN4kPZwUSzFLMZd\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x609394b09bc0e0f4a3fb946c769dc75b4d4154b367503190ebd1e3ca12c23ca8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a57dfea18ea68df6f48cca1ed1c030541a5d0cf1c115725da8ae7c2ad6f41f1\",\"dweb:/ipfs/QmZ5owm2HG4jjTzkimL9zHZHSTHT5o81L3mPA24391PtmT\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"src/Counter.sol\":{\"keccak256\":\"0x6bb0db596c22a774cd9b02b1495a9d64cedf19fe576fc97094fc2626ab45b6d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9cfe41171e6511b22faa3765e4287722761a90812b7e31b69717048afbae975\",\"dweb:/ipfs/QmYEWeTLemoGrWpMpUBmNEPxhL5bHAvUuuJFmBViP3uwrj\"]},\"test/Counter.t.sol\":{\"keccak256\":\"0x611891ca4562aafceea3c3fbad3c04bb629e9c9af6915c9808025164645ba302\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd62df6fdc1fe0ce9c7872291cf4a8300d3daddbce1055bce1cbd27e98340534\",\"dweb:/ipfs/QmVXkuMdwXWtKMEY41LkhUsLLeM1xtx2MRnX86nzNWEhBa\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "counter",
          "outputs": [
            {
              "internalType": "contract Counter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDec"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDecUnderFlow"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFailDec"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testInc"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@opensezppling/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Counter.t.sol": "CounterTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x260965186c4b36030b61bfff44312607b7d9bc03fa8b5e9c2581ffeb17d0053b",
        "urls": [
          "bzz-raw://4c50e42ec13a54820d77ceb54e16f6efc1e9af2312ed39049ffbd1a5489cd0ee",
          "dweb:/ipfs/Qma1xCsmPhDfAZfDZGoFC7wuCTNXDhsBdFEZKnrZgTUj93"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0e6f32877ab26a83c9334eb5a000bf326bd2a0b04fea8647e045cea9c445f534",
        "urls": [
          "bzz-raw://8965978bfa66ddab8db95449a96ee47d44c62ebcb4271ab293e847f359a2ba7d",
          "dweb:/ipfs/QmazxpekoHnno4ySoNUct7NcKx6UJR7UvcMtJ9JYsBDEUh"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x1c58e6899314a94d6e99225481aaaa3e283050e7fddb5f72bebc244bc1fb4d21",
        "urls": [
          "bzz-raw://11e6f36d32826f6f133248d1158a343b5201de5869553d46df56e7fd0163e3f3",
          "dweb:/ipfs/Qma3dZZiBCc8tTw6BjmjgYxyTSCBhW2nN4kPZwUSzFLMZd"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x609394b09bc0e0f4a3fb946c769dc75b4d4154b367503190ebd1e3ca12c23ca8",
        "urls": [
          "bzz-raw://5a57dfea18ea68df6f48cca1ed1c030541a5d0cf1c115725da8ae7c2ad6f41f1",
          "dweb:/ipfs/QmZ5owm2HG4jjTzkimL9zHZHSTHT5o81L3mPA24391PtmT"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "src/Counter.sol": {
        "keccak256": "0x6bb0db596c22a774cd9b02b1495a9d64cedf19fe576fc97094fc2626ab45b6d7",
        "urls": [
          "bzz-raw://a9cfe41171e6511b22faa3765e4287722761a90812b7e31b69717048afbae975",
          "dweb:/ipfs/QmYEWeTLemoGrWpMpUBmNEPxhL5bHAvUuuJFmBViP3uwrj"
        ],
        "license": "MIT"
      },
      "test/Counter.t.sol": {
        "keccak256": "0x611891ca4562aafceea3c3fbad3c04bb629e9c9af6915c9808025164645ba302",
        "urls": [
          "bzz-raw://dd62df6fdc1fe0ce9c7872291cf4a8300d3daddbce1055bce1cbd27e98340534",
          "dweb:/ipfs/QmVXkuMdwXWtKMEY41LkhUsLLeM1xtx2MRnX86nzNWEhBa"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Counter.t.sol",
    "id": 29480,
    "exportedSymbols": {
      "Counter": [
        29382
      ],
      "CounterTest": [
        29479
      ],
      "DSTest": [
        2291
      ],
      "StdAssertions": [
        3781
      ],
      "StdChains": [
        4475
      ],
      "StdCheats": [
        6751
      ],
      "StdInvariant": [
        7041
      ],
      "StdStorage": [
        7791
      ],
      "StdStyle": [
        10435
      ],
      "StdUtils": [
        11242
      ],
      "Test": [
        11291
      ],
      "TestBase": [
        2351
      ],
      "Vm": [
        12650
      ],
      "console": [
        20714
      ],
      "console2": [
        28810
      ],
      "stdError": [
        6817
      ],
      "stdJson": [
        7617
      ],
      "stdMath": [
        7759
      ],
      "stdStorage": [
        9224
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:600:20",
    "nodes": [
      {
        "id": 29393,
        "nodeType": "PragmaDirective",
        "src": "32:24:20",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 29394,
        "nodeType": "ImportDirective",
        "src": "58:28:20",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29480,
        "sourceUnit": 11292,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29395,
        "nodeType": "ImportDirective",
        "src": "87:28:20",
        "nodes": [],
        "absolutePath": "src/Counter.sol",
        "file": "../src/Counter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29480,
        "sourceUnit": 29383,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29479,
        "nodeType": "ContractDefinition",
        "src": "157:474:20",
        "nodes": [
          {
            "id": 29400,
            "nodeType": "VariableDeclaration",
            "src": "189:22:20",
            "nodes": [],
            "constant": false,
            "functionSelector": "61bc221a",
            "mutability": "mutable",
            "name": "counter",
            "nameLocation": "204:7:20",
            "scope": 29479,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Counter_$29382",
              "typeString": "contract Counter"
            },
            "typeName": {
              "id": 29399,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29398,
                "name": "Counter",
                "nameLocations": [
                  "189:7:20"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29382,
                "src": "189:7:20"
              },
              "referencedDeclaration": 29382,
              "src": "189:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counter_$29382",
                "typeString": "contract Counter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29411,
            "nodeType": "FunctionDefinition",
            "src": "215:55:20",
            "nodes": [],
            "body": {
              "id": 29410,
              "nodeType": "Block",
              "src": "239:31:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 29408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29403,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29400,
                      "src": "243:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Counter_$29382",
                        "typeString": "contract Counter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 29406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "253:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Counter_$29382_$",
                          "typeString": "function () returns (contract Counter)"
                        },
                        "typeName": {
                          "id": 29405,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 29404,
                            "name": "Counter",
                            "nameLocations": [
                              "257:7:20"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 29382,
                            "src": "257:7:20"
                          },
                          "referencedDeclaration": 29382,
                          "src": "257:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Counter_$29382",
                            "typeString": "contract Counter"
                          }
                        }
                      },
                      "id": 29407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "253:13:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Counter_$29382",
                        "typeString": "contract Counter"
                      }
                    },
                    "src": "243:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Counter_$29382",
                      "typeString": "contract Counter"
                    }
                  },
                  "id": 29409,
                  "nodeType": "ExpressionStatement",
                  "src": "243:23:20"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "224:5:20",
            "parameters": {
              "id": 29401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:20"
            },
            "returnParameters": {
              "id": 29402,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "239:0:20"
            },
            "scope": 29479,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29427,
            "nodeType": "FunctionDefinition",
            "src": "273:79:20",
            "nodes": [],
            "body": {
              "id": 29426,
              "nodeType": "Block",
              "src": "299:53:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 29414,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29400,
                        "src": "303:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Counter_$29382",
                          "typeString": "contract Counter"
                        }
                      },
                      "id": 29416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "311:3:20",
                      "memberName": "inc",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29373,
                      "src": "303:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 29417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "303:13:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29418,
                  "nodeType": "ExpressionStatement",
                  "src": "303:13:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 29420,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29400,
                            "src": "329:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Counter_$29382",
                              "typeString": "contract Counter"
                            }
                          },
                          "id": 29421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "337:5:20",
                          "memberName": "count",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29365,
                          "src": "329:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 29422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "329:15:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 29423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "346:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 29419,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2482,
                        2507,
                        2520,
                        2536,
                        2578,
                        2620,
                        2662,
                        2699,
                        2736,
                        2773,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "320:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 29424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "320:28:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29425,
                  "nodeType": "ExpressionStatement",
                  "src": "320:28:20"
                }
              ]
            },
            "functionSelector": "e3723e03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testInc",
            "nameLocation": "282:7:20",
            "parameters": {
              "id": 29412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "289:2:20"
            },
            "returnParameters": {
              "id": 29413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "299:0:20"
            },
            "scope": 29479,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29453,
            "nodeType": "FunctionDefinition",
            "src": "355:113:20",
            "nodes": [],
            "body": {
              "id": 29452,
              "nodeType": "Block",
              "src": "381:87:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 29430,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29400,
                        "src": "385:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Counter_$29382",
                          "typeString": "contract Counter"
                        }
                      },
                      "id": 29432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "393:3:20",
                      "memberName": "inc",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29373,
                      "src": "385:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 29433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "385:13:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29434,
                  "nodeType": "ExpressionStatement",
                  "src": "385:13:20"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 29435,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29400,
                        "src": "402:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Counter_$29382",
                          "typeString": "contract Counter"
                        }
                      },
                      "id": 29437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "410:3:20",
                      "memberName": "inc",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29373,
                      "src": "402:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 29438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "402:13:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29439,
                  "nodeType": "ExpressionStatement",
                  "src": "402:13:20"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 29440,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29400,
                        "src": "419:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Counter_$29382",
                          "typeString": "contract Counter"
                        }
                      },
                      "id": 29442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "427:3:20",
                      "memberName": "dec",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29381,
                      "src": "419:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 29443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "419:13:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29444,
                  "nodeType": "ExpressionStatement",
                  "src": "419:13:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 29446,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29400,
                            "src": "445:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Counter_$29382",
                              "typeString": "contract Counter"
                            }
                          },
                          "id": 29447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "453:5:20",
                          "memberName": "count",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29365,
                          "src": "445:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 29448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "445:15:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 29449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "462:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 29445,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2482,
                        2507,
                        2520,
                        2536,
                        2578,
                        2620,
                        2662,
                        2699,
                        2736,
                        2773,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "436:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 29450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "436:28:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29451,
                  "nodeType": "ExpressionStatement",
                  "src": "436:28:20"
                }
              ]
            },
            "functionSelector": "8c49b4cf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDec",
            "nameLocation": "364:7:20",
            "parameters": {
              "id": 29428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "371:2:20"
            },
            "returnParameters": {
              "id": 29429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "381:0:20"
            },
            "scope": 29479,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29462,
            "nodeType": "FunctionDefinition",
            "src": "471:51:20",
            "nodes": [],
            "body": {
              "id": 29461,
              "nodeType": "Block",
              "src": "501:21:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 29456,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29400,
                        "src": "505:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Counter_$29382",
                          "typeString": "contract Counter"
                        }
                      },
                      "id": 29458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "513:3:20",
                      "memberName": "dec",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29381,
                      "src": "505:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 29459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "505:13:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29460,
                  "nodeType": "ExpressionStatement",
                  "src": "505:13:20"
                }
              ]
            },
            "functionSelector": "cbff37a9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFailDec",
            "nameLocation": "480:11:20",
            "parameters": {
              "id": 29454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "491:2:20"
            },
            "returnParameters": {
              "id": 29455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "501:0:20"
            },
            "scope": 29479,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29478,
            "nodeType": "FunctionDefinition",
            "src": "526:101:20",
            "nodes": [],
            "body": {
              "id": 29477,
              "nodeType": "Block",
              "src": "561:66:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29468,
                          "name": "stdError",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6817,
                          "src": "581:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_stdError_$6817_$",
                            "typeString": "type(library stdError)"
                          }
                        },
                        "id": 29469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "590:15:20",
                        "memberName": "arithmeticError",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6767,
                        "src": "581:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 29465,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2344,
                        "src": "565:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12650",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 29467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "568:12:20",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12350,
                      "src": "565:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 29470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "565:41:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29471,
                  "nodeType": "ExpressionStatement",
                  "src": "565:41:20"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 29472,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29400,
                        "src": "610:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Counter_$29382",
                          "typeString": "contract Counter"
                        }
                      },
                      "id": 29474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "618:3:20",
                      "memberName": "dec",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29381,
                      "src": "610:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 29475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "610:13:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29476,
                  "nodeType": "ExpressionStatement",
                  "src": "610:13:20"
                }
              ]
            },
            "functionSelector": "92cc5770",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDecUnderFlow",
            "nameLocation": "535:16:20",
            "parameters": {
              "id": 29463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "551:2:20"
            },
            "returnParameters": {
              "id": 29464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "561:0:20"
            },
            "scope": 29479,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 29396,
              "name": "Test",
              "nameLocations": [
                "181:4:20"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11291,
              "src": "181:4:20"
            },
            "id": 29397,
            "nodeType": "InheritanceSpecifier",
            "src": "181:4:20"
          }
        ],
        "canonicalName": "CounterTest",
        "contractDependencies": [
          29382
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          29479,
          11291,
          2351,
          2348,
          11242,
          7041,
          6751,
          6072,
          4475,
          3781,
          2291
        ],
        "name": "CounterTest",
        "nameLocation": "166:11:20",
        "scope": 29480,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 20
}